#!/bin/bash
set -x

#SCR_PATH=`pwd`/scr-1.1.8/install
SCR_PATH=/home/sdi/windows-xp/my-projects/my-6th-proposal-VeloC/xgithub/scr-github/install
echo SCR_PATH=$SCR_PATH
#rm -rf $SCR_PATH

## download and build SCR
#if [ ! -d scr-1.1.8 ]; then
#  wget https://github.com/LLNL/scr/releases/download/v1.1.8/scr-1.1.8.tar.gz
#  tar -zxf scr-1.1.8.tar.gz
#  pushd scr-1.1.8
#    ./configure \
#      --prefix=${SCR_PATH} \
#      --with-scr-conf=${SCR_PATH}/scr.conf \
#      --with-scr-cache-base=/tmp \
#      --with-scr-cntl-base=/tmp \
#      --without-mysql \
#      --without-yogrt \
#      --without-dtcmp
#    make
#    make install
#  popd
#fi

# download and build SCR
if [ ! -d scr.git ]; then
  git clone git@github.com:llnl/scr.git scr.git
fi
if [ ! -d $SCR_PATH ]; then
  pushd scr.git
    git pull
    rm -rf build
    mkdir build
    pushd build
      cmake \
        -DCMAKE_INSTALL_PREFIX=${SCR_PATH} \
        ..
      make
      make install
    popd
  popd
fi

# clear out existing build
#rm -rf vmem.o libvmem.a heatdis_vmem

# build FTI library
mkdir -p ./obj/vmem
rm -rf ./obj/vmem/*.o

mpicc -g -O0 -o ./obj/vmem/md5.o -c ./src/vmem/md5.c -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/dictionary.o -c ./src/vmem/dictionary.c -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/iniparser.o -c ./src/vmem/iniparser.c -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/galois.o -c ./src/vmem/galois.c -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/jerasure.o -c ./src/vmem/jerasure.c -I./src/vmem -I./include

mpicc -g -O0 -o ./obj/vmem/conf.o -c ./src/vmem/conf.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/vmem_api.o -c ./src/vmem/vmem_api.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/checkpoint.o -c ./src/vmem/checkpoint.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/meta.o -c ./src/vmem/meta.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/postckpt.o -c ./src/vmem/postckpt.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/postreco.o -c ./src/vmem/postreco.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/recover.o -c ./src/vmem/recover.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/tools.o -c ./src/vmem/tools.c -I./vmem/include -I./src/vmem -I./include
mpicc -g -O0 -o ./obj/vmem/topo.o -c ./src/vmem/topo.c -I./vmem/include -I./src/vmem -I./include

#ar cr libvmem.a vmem.o
ar cr ./obj/libvmem.a ./obj/vmem/conf.o ./obj/vmem/vmem_api.o ./obj/vmem/checkpoint.o ./obj/vmem/meta.o ./obj/vmem/postckpt.o ./obj/vmem/postreco.o ./obj/vmem/recover.o ./obj/vmem/tools.o ./obj/vmem/topo.o ./obj/vmem/md5.o ./obj/vmem/dictionary.o ./obj/vmem/iniparser.o ./obj/vmem/galois.o ./obj/vmem/jerasure.o

# compile heatdis code which uses FTI
#mpicc -g -O0 -o heatdis_vmem heatdis.c -I. -L${SCR_PATH}/lib64 -Wl,-rpath,${SCR_PATH}/lib64 -lscr libvmem.a -lm

# build VELOC library
#mpicc -g -O0 -o veloc.o -c veloc.c -I${SCR_PATH}/include
#ar cr libveloc.a veloc.o

# TODO: create VELOC test cases
#rm -rf heatdis_mem heatdis_file heatdis_memfile
#mpicc -g -O0 -o heatdis_mem     heatdis_mem.c     -I. -L${SCR_PATH}/lib64 -Wl,-rpath,${SCR_PATH}/lib64 -lscr libveloc.a -lm
#mpicc -g -O0 -o heatdis_file    heatdis_file.c    -I. -L${SCR_PATH}/lib64 -Wl,-rpath,${SCR_PATH}/lib64 -lscr libveloc.a -lm
#mpicc -g -O0 -o heatdis_memfile heatdis_memfile.c -I. -L${SCR_PATH}/lib64 -Wl,-rpath,${SCR_PATH}/lib64 -lscr libveloc.a -lm
